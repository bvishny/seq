#!/usr/bin/env rc

# calc, (c) Oct, 2010, by Bill Burdick
# licensed with the ZLIB license (see the LICENSE file)

# assign var value -- find var in window and replace its old value with the new one
# variables are words made of letters, numbers, and/or _,  followed by '=' and, optionally,  a number
fn assign {
	if (echo -n '/(^|[^a-zA-Z0-9_])'$1' *= */+#0;/[0-9.e+\-]*/'|9p write acme/$winid/addr >[2] /dev/null) {
		echo -n 'dot=addr'|9p write acme/$winid/ctl
		echo -n $2 | 9p write acme/$winid/data
	}
	if not echo 'Could not find variable: "'$1'"'
}

# copy calc commands from window into /tmp/cmd
9p read acme/$winid/body|sed -e '/^#!/,$p;d'>/tmp/cmd
chmod a+x /tmp/cmd
rm -f /tmp/cmd.errs
9p read acme/$winid/body |
		# extract variables and values from window
	sed -n -e '/^#!/q;s/([a-zA-Z0-9_]+) *= *([0-9.e+\-]*)/\n\1=\2\n/g;h;:v;s/\n(.|\n)*//;s/^[a-zA-Z0-9_]+=$/&0/;/^[a-zA-Z0-9_]+=[0-9.e+\-]*/p;g;/\n/!d;s/[^\n]*\n//;h;bv' |
		# pipe vars (VAR=VALUE) to command
	/tmp/cmd |
		# parse vars from commmand and convert to "assign" calls (above function)
	awk '{loc=index($0, "=");print "assign (" substr($0, 1, loc - 1) ") (" substr($0, loc + 1) ")"}' |
		# pipe assign commands to rc to plug the values back into the window
	rc
if (test -s /tmp/cmd.errs) 9p write acme/$winid/errors < /tmp/cmd.errs
exit 0
